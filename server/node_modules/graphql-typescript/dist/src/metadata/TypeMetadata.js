"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TypeMetadata {
    constructor(classPrototype) {
        this.setIsInput = () => {
            this.isInput = true;
        };
        this.addFieldMetadata = (fieldName, fieldMetadata) => {
            this.fieldMetadataMap[fieldName] = fieldMetadata;
        };
        this.getLiteral = () => {
            const fieldLiterals = [];
            Object.values(this.fieldMetadataMap).forEach(fieldMetadata => {
                if (fieldMetadata.isMutation)
                    return;
                fieldLiterals.push(fieldMetadata.getLiteral());
            });
            const literal = `
      ${this.isInput ? 'input' : 'type'} ${this.classPrototype.constructor.name} {
      \t${fieldLiterals.join('\n\t')}
      }`;
            return literal;
        };
        this.classPrototype = classPrototype;
        this.isInput = false;
        this.fieldMetadataMap = {};
    }
}
exports.TypeMetadata = TypeMetadata;
//# sourceMappingURL=TypeMetadata.js.map